---
author: nifeng
comments: true
date: 2013-07-06 06:09:13+00:00
layout: post
slug: mysql%e9%82%a3%e4%ba%9b%e4%ba%8b
title: mysql那些事
wordpress_id: 313
categories:
- tech
tags:
- mysql
---

##row size##

mysql一个表中的列数以及一条记录总的大小都是有限制的，具体取决于下面的三个因素（mysql5.0版本）：

* 每个表（不管什么存储引擎）一个记录的大小不能超过65535个字节。具体的存储引擎对记录的大小可能还会增加其它的一些限制。
* 表中的列数的强限制是4096个（不管什么存储引擎）。具体的存储引擎可能还会有额外的限制，比如innodb就不能超过1000个。
* 每个表都存在一个.frm文件，其中包含了对表的一些定义。而这些有可能会对列数和记录长度的上限造成影响。

详细的信息大家可以查看[mysql帮助手册](http://dev.mysql.com/doc/refman/5.0/en/column-count-limit.html)，
其中还有一个记录长度的计算公式。这边主要想说说关于记录总数不能超过65535这个限制。
需要注意的是65535这个限制的单位是字节，而varchar(n)这个类型当中的指的是字符数，而不是字节数，实际的字节数是和编码相关的，
比如UTF8编码的话，varchar(n)所占的字节就是3\*n
\(utf8编码中的中文大多数都是占3个字节，回头有时间再仔细研究一下字符编码，这篇关于字符编码的[文章](http://blog.jobbole.com/39309/\)
感觉还不错)。

由于某种原因，有一次在数据库表中设置了两个varchar(10000)的类型，再加上其它的一些字段，快接近65535个字节了。
后来再想增加一个varchar(255)的字段，死活加不上，老是报如下的错误：

“Row size too large...”

当时算了算，怎么看都没有超过65535，就是忽略了编码的问题。关于是65535个字节这个限制，如下几个方面需要注意：

* 就是上面的说的字符编码的问题
* variable-length长度的字段还会占用几个字节来存储字段的长度。比如varchar(255)需要两个字节来存储长度，所以实际占用了767个字节。
* 对于blob和text这两种类型是不计在65535之内的，实际上只占了少数的几个字节，因为这两个类型与记录中的其它字段不是存储在一个位置的，我猜所占的那个几个字节应该是用来标记blob和text这两个类型的值的实际位置，有点类似于指针的概念（有时间去瞅瞅mysql的源码）。
* 列是否允许为空也会对允许的记录长度产生影响。对于myisam表来说，如果允许字段为空的话，需要额外的一个bit位来标记该列的值是否为空，而在innodb中则不需要。

##limit查询##

limit $offset,$limit这个语句在遍历表记录和分页时会经常用到语句，
但是当$offset和$length比较大的时候，查询会明显变慢，主要原因在于limit $offset, $limit的实现方式如下是如下过程：

从存储引擎获取满足条件的$offset+$limit条记录，这么多的记录到达mysql服务器端之后再挑选出从$offset位置处开始的$limit条记录。
也就是说仅管只取了$limit条记录，但实际上会导致$offset+$limit条记录被加载到mysql服务器端，这对服务器的压力是相当的。
因此在分页的场景中，页数越往后，$offset越大，导致加载到服务器端的数据越来越大，从而导致查询越来越慢。
因此，当数据量很大时，需要对分页查询进行优化。
至于如何优化，等下次再补上吧^_^



